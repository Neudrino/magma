load("@rules_python//python:defs.bzl", "py_binary", "py_library", "py_runtime_pair")
load("@subpar//:subpar.bzl", "par_binary")
load("@python_deps//:requirements.bzl", "requirement")

py_runtime(
    name = "python3",
    files = ["@python_interpreter//:files"],
    interpreter = "@python_interpreter//:python_bin",
    python_version = "PY3",
    visibility = ["//visibility:public"],
)

py_runtime_pair(
    name = "my_py_runtime_pair",
    py2_runtime = None,
    py3_runtime = ":python3",
)

toolchain(
    name = "py_toolchain",
    toolchain = ":my_py_runtime_pair",
    toolchain_type = "@bazel_tools//tools/python:toolchain_type",
)

par_binary(
    name = "mobilityd_par",
    srcs = glob(["*.py"]),
    # legacy_creat_init = False is required to fix issues in module import, see https://github.com/rules-proto-grpc/rules_proto_grpc/issues/145
    legacy_create_init = False,
    main = "main.py",
    python_version = "PY3",
    visibility = ["//visibility:public"],
    # zip_safe = False enables shared libraries to be extracted to a temp folder, see https://github.com/google/subpar/issues/37
    zip_safe = False,
    deps = [
        ":ip_address_man",
        "//lte/protos:mconfigs_python_proto",
        "//lte/protos:subscriberdb_python_grpc",
        "//lte/protos:subscriberdb_python_proto",
        "//orc8r/gateway/python/magma/common/redis:client",
        "//orc8r/gateway/python/magma/configuration:service_configs",
    ],
)

py_binary(
    name = "mobilityd",
    srcs = glob(["*.py"]),
    # legacy_creat_init = False is required to fix issues in module import, see https://github.com/rules-proto-grpc/rules_proto_grpc/issues/145
    legacy_create_init = False,
    main = "main.py",
    python_version = "PY3",
    visibility = ["//visibility:public"],
    deps = [
        ":ip_address_man",
        "//lte/protos:keyval_python_proto",
        "//lte/protos:mconfigs_python_proto",
        "//lte/protos:mobilityd_python_grpc",
        "//lte/protos:mobilityd_python_proto",
        "//lte/protos:subscriberdb_python_grpc",
        "//lte/protos:subscriberdb_python_proto",
        "//orc8r/gateway/python/magma/common:metrics",
        "//orc8r/gateway/python/magma/common:sentry",
        "//orc8r/gateway/python/magma/common/redis:client",
        "//orc8r/gateway/python/magma/configuration:service_configs",
        "//orc8r/protos:eventd_python_grpc",
        "//orc8r/protos:mconfig_python_proto",
        "//orc8r/protos:mconfigs_python_proto",
        "//orc8r/protos:metricsd_python_proto",
        "//orc8r/protos:redis_python_proto",
        "//orc8r/protos:service303_python_grpc",
        "//orc8r/protos:service303_python_proto",
    ],
)

py_library(
    name = "ip_address_man",
    srcs = ["ip_address_man.py"],
    deps = [
        requirement("redis_collections"),
        requirement("redis-lock"),
        requirement("jsonpickle"),
        requirement("netifaces"),
        requirement("scapy"),
    ],
)
